1.Які існують типи даних у Javascript? ---------У JavaScript є 8 основних типів. 1) Number 2 ) Boolean 3) string 4) Symbol 5 ) Undefined 6 )null
7) Object 8 )BigInt
1)Тип number представляє і цілі числа, і числа з рухомою точкою.
Окрім звичайних чисел, є так звані “спеціальні числові значення”, що також мають відношення до цього типу даних: Infinity, -Infinity і NaN.
Infinity являє собою математичну нескінченність ?. Це спеціальне значення, що є більшим за будь-яке число.
NaN (Not a Number) являє собою помилку обчислення. Це є результат неправильної або невизначеної математичної операці
2) Boolean Логічний тип може приймати лише два значення: true (істина) та false (хиба).

Цей тип зазвичай використовується для зберігання значень так/ні: true означає “так, вірно”, а false означає “ні, не вірно”.
3)String Рядок у JavaScript має бути оточений лапками.
4)Symbol для унікальних ідентифікаторів.
5)undefined для неприсвоєних значень — автономний тип, який має єдине значення undefined.
6)null для невідомих значень — автономний тип, який має єдине значення null.
7)object для більш складних структур даних.
8)У JavaScript, тип “number” не може містити числа більші  9007199254740991, або менші за -9007199254740991 для від’ємних чисел. Це технічне обмеження, спричинене їхньою внутрішньою реалізацією.

Для більшості потреб цього достатньо, але бувають випадки, коли нам потрібні дійсно великі числа, наприклад, для криптографії або мікроксекундних часових міток (timestamps).

Нещодавно в мову був доданий тип BigInt для представлення цілих чисел довільної довжини.

Значення з типом BigInt створюється через додавання n у кінець цілого числа



2.У чому різниця між == і ===?----------
В JavaScript оператори == (рівність) і === (строга рівність) використовуються для порівняння значень.

Різниця між ними полягає в тому, як вони виконують порівняння:

Оператор == (рівність): Виконує нестроге порівняння значень, допускаючи перетворення типів. Наприклад, при порівнянні рядків і чисел, рядки будуть перетворюватись у числа перед порівнянням. 
Оператор === (строга рівність): Виконує строге порівняння значень, не допускаючи перетворення типів. Обидва операнди повинні мати однаковий тип і однакове значення, щоб повернути true. 
Отже, основна різниця між == і === полягає у тому, що === перевіряє не тільки значення, але й типи даних, тоді як == дозволяє перетворення типів для виконання порівняння.
 Рекомендується використовувати === (строгу рівність) для більш точного порівняння значень.
3 Що таке оператор? ----------
це інструкція даної мови програмування, якою задається певний крок процесу обробки інформації 
 Оператори служать для керування потоком команд в JavaScript. 
Один об'єкт може бути розбитий на кілька рядків, або, навпаки в одному рядку може битьнесколько операторів
Також зустрічав трохи інші формалювання В JavaScript, оператор - це символ або символьна комбінація, яка виконує певну операцію над одним або більше операндами
 (змінними, значеннями або виразами) і повертає результат. Оператори використовуються для виконання різних дій, таких як присвоєння значень, арифметичні операції, порівняння, логічні операції тощо.
